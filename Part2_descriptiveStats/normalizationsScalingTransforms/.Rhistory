# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(tidyverse) # data manipulation and visualization
source(paste0(gitHubPath, 'courseTheme.R'))
library(pracma)
df = read.csv(paste0(gitHubPath, '\\data\\SP500HistoricalData.csv'))
names(df)[6] <- 'Change'
df$Change = unlist(lapply(df$Change, function(x) as.numeric(strsplit(x, '%')[[1]])))
df$dummy = as.factor(1)
ggplot(df, aes(x = Change, color = dummy, fill = dummy)) +
geom_histogram(breaks = seq(-2, 2, .1)) +
myTheme + brightFil + brightCol + theme(legend.position = 'none') +
xlab('Daily Change (%)')
sum(df$Change>1)
sum(df$Change>1) / length(df$Change)
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(tidyverse) # data manipulation and visualization
source(paste0(gitHubPath, 'courseTheme.R'))
library(pracma)
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(tidyverse) # data manipulation and visualization
source(paste0(gitHubPath, 'courseTheme.R'))
library(pracma)
df = read.csv(paste0(gitHubPath, '\\data\\SP500HistoricalData.csv'))
names(df)[6] <- 'Change'
df$Change = unlist(lapply(df$Change, function(x) as.numeric(strsplit(x, '%')[[1]])))
df$dummy = as.factor(1)
ggplot(df, aes(x = Change, color = dummy, fill = dummy)) +
geom_histogram(breaks = seq(-2, 2, .1)) +
myTheme + brightFil + brightCol + theme(legend.position = 'none') +
xlab('Daily Change (%)')
M = mean(df$Change)
S = sd(df$Change)
pnorm(1, M, S)
sum(df$Change>1) / length(df$Change)
1 - pnorm(1, M, S)
ggplot(df, aes(x = Change, color = dummy, fill = dummy)) +
geom_histogram(breaks = seq(-2, 2, .1)) +
myTheme + brightFil + brightCol + theme(legend.position = 'none') +
xlab('Daily Change (%)') +
geom_vline(xintercept = 1, color = 'red')
ggplot(df, aes(x = Change, color = dummy, fill = dummy)) +
geom_histogram(breaks = seq(-2, 2, .1)) +
myTheme + brightFil + brightCol + theme(legend.position = 'none') +
xlab('Daily Change (%)') +
geom_vline(xintercept = 1, color = 'red', linewidth = 1.5)
M = mean(df$Change)
S = sd(df$Change)
#based on using the normal distribution as a model,
#what is the probability of a 1% gain?
(1 - pnorm(1, M, S))*100
#empirically, what is the probability of 1% gain?
(sum(df$Change>1) / length(df$Change))*100
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
# df <- df %>% filter(TargALL_UVSD_d >=0)
#first plot the histogram of country total populations
df$dummy = as.factor(1)
df %>% ggplot(aes(x = TargALL_UVSD_d, color = dummy, fill = dummy)) +
geom_histogram(bins = 10) +
myTheme + brightCol + brightFil + theme(legend.position = 'none')
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
#first plot the histogram of country total populations
df$dummy = as.factor(1)
df %>% ggplot(aes(x = TargALL_UVSD_d, color = dummy, fill = dummy)) +
geom_histogram(bins = 10) +
myTheme + brightCol + brightFil + theme(legend.position = 'none')
sum(df$TargALL_UVSD_d>1) / length(df$X)
df %>% ggplot(aes(x = TargALL_UVSD_d, color = dummy, fill = dummy)) +
geom_histogram(breaks = seq(0,3,.1)) +
myTheme + brightCol + brightFil + theme(legend.position = 'none')+
geom_vline(xintercept = 1, color = 'red', linewidth = 1.5)
df %>% ggplot(aes(x = TargALL_UVSD_d, color = dummy, fill = dummy)) +
geom_histogram(breaks = seq(0,3,.2)) +
myTheme + brightCol + brightFil + theme(legend.position = 'none')+
geom_vline(xintercept = 1, color = 'red', linewidth = 1.5)
24*60
24*60*7
120/10080
6/7
