# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
library(tidyverse)
y = matrix(nrow = 2, ncol = 2)
y
y[1,2] = 1
y
x = matrix(c(1,2,3,4), nrow=2, ncol=2)
#describe in words how the items 1,2,3,4
#got placed into the 2 rows and 2 columns:
#note that the print out gives us clues
#about indexing
x
x[1,]
x[,1]
#you can also create an empty matrix
#and fill it later
y = matrix(nrow = 2, ncol = 2)
y
y[1,2] = 1
#you can switch from column major order
#to row major order:
z = matrix(c(1,2,3,4,5,6), nrow = 2, byrow = T)
#basic linear algebra opperations are easy:
x %*% z #matrix multiplication
x + x  #addition
x*3 #scalar multiplication
#the same indexing tricks used on vectors
#work on matrices
z[,2:3]
z[,-2]
#the dim function is useful for finding the
#shape of a matrix
dim(z)
z[dim(z)[1],] #the last row
z[,dim(z)[2]] #the last column
#R thinks of matrices as vectors
#that just have row and column attributes
attributes(z)
length(z)
z[4]
#you can also flatten a matrix into a vector
z = c(z)
z[4]
m <- matrix(c(1,2,3,4,5,6,7,8,9,10), nrow = 2)
m
m[(c(2,2,3,3), c(1,2,1,2)]
m[c(2,2,3,3), c(1,2,1,2)]
m[2:3, 1:2]
m[1:2, 2:3]
m[3:7]
m[3:6]
m[2,3:5]
m <- matrix(c(1,2,3,4,5,6,7,8,9,10), nrow = 2, byrow = T)
m
cbind(m, c(100,100))
rbind(m, c(1,2,3,4,5))
cbind(m, c('hello', 'there'))
cbind(m, c(T, F))
matrix(c(1,2), nrow = 3, ncol =2)
r = m[1,]
str(r)
str(m)
attributes(r)
attributes(m)
r = m[1,,drop = F]
str(r)
attributes(r)
a = array(c(1:18), dim = c(2,3,3))
a
