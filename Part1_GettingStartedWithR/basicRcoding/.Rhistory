head(cw)
names(cw)
cw <- janitor::clean_names(cw)
names(cw)
# Chunk 3: make easier names
names(cw)
colnames(df) <- c('country', 'countryCode', 'year', 'mismanagedTotal',
'coastalPop', 'totalPop')
names(df)
names(cw)
colnames(cw) <- c('country', 'countryCode', 'year', 'mismanagedTotal',
'coastalPop', 'totalPop')
names(cw)
dataCount_cw <- cw %>%
select(year, mismanagedTotal) %>%
group_by(year) %>%
summarize(naCount = sum(is.na(mismanagedTotal)),
n = n()) %>%
mutate(goodVals = n - naCount)
dataCount_cw
View(dataCount_cw)
# Chunk 1
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(tidyverse) # data manipulation and visualization
library(lubridate)
# Chunk 2: email data
df = read.csv(paste0(gitHubPath, '\\data\\emailTimes.csv'))
df <- df %>% group_by(DayOfWeek, Month, DayOfMonth, Year) %>%
summarize(count = n(), .groups = 'drop')
df = read.csv(paste0(gitHubPath, '\\data\\emailTimes.csv'))
# Step 1: Generate a complete date range for the year 2024
start_date <- as.Date('2020-06-14')
end_date <- as.Date('2024-07-14')
complete_dates <- seq.Date(start_date, end_date, by = 'day')
# Step 2: Create a data frame with the complete date range and extract day of the week
calendar_df <- data.frame(
Date = complete_dates,
DayOfWeek = weekdays(complete_dates),
Month = month(complete_dates),
DayOfMonth = day(complete_dates),
Year = year(complete_dates)
)
month_abbr <- c('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec')
# Create a vector of abbreviated month names to numeric conversion
month_abbr_to_num <- function(month) {
match(month, month_abbr)
}
# Convert example abbreviated month names to numeric
df$MonthNum <- month_abbr_to_num(df$Month)
df$Date = as.Date(paste(df$Year, df$MonthNum, df$DayOfMonth, sep = '-'))
# Step 3: Merge this with your data
df_full <- calendar_df %>%
left_join(df, by = "Date", suffix = c("", "_remove"))  %>%
replace_na(list(count = 0)) %>%
select(which(!grepl("remove", names(.))))
View(calendar_df)
View(df)
View(df)
df = read.csv(paste0(gitHubPath, '\\data\\emailTimes.csv'))
# Step 1: Generate a complete date range for the year 2024
start_date <- as.Date('2020-06-14')
end_date <- as.Date('2024-07-14')
complete_dates <- seq.Date(start_date, end_date, by = 'day')
# Step 2: Create a data frame with the complete date range
#         and extract day of the week month, day, and year
calendar_df <- data.frame(
Date = complete_dates,
DayOfWeek = weekdays(complete_dates),
Month = month(complete_dates),
DayOfMonth = day(complete_dates),
Year = year(complete_dates)
)
month_abbr <- c('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec')
# Create a vector of abbreviated month names to numeric conversion
month_abbr_to_num <- function(month) {
match(month, month_abbr)
}
# Convert example abbreviated month names to numeric
df$MonthNum <- month_abbr_to_num(df$Month)
View(df)
# Step 3: Merge this with your data
df_full <- calendar_df %>%
left_join(df, by = "Date", suffix = c("", "_remove"))  %>%
replace_na(list(count = 0)) %>%
select(which(!grepl("remove", names(.))))
# Convert example abbreviated month names to numeric
df$MonthNum <- month_abbr_to_num(df$Month)
df$Date = as.Date(paste(df$Year, df$MonthNum, df$DayOfMonth, sep = '-'))
# Step 3: Merge this with your data
df_full <- calendar_df %>%
left_join(df, by = "Date", suffix = c("", "_remove"))  %>%
replace_na(list(count = 0)) %>%
select(which(!grepl("remove", names(.))))
View(df_full)
df = read.csv(paste0(gitHubPath, '\\data\\emailTimes.csv'))
# Step 1: Generate a complete date range
start_date <- as.Date('2020-06-14')
end_date <- as.Date('2024-07-14')
complete_dates <- seq.Date(start_date, end_date, by = 'day')
# Step 2: Create a data frame with the complete date range
#         and extract day of the week month, day, and year
calendar_df <- data.frame(
Date = complete_dates,
DayOfWeek = weekdays(complete_dates),
Month = month(complete_dates),
DayOfMonth = day(complete_dates),
Year = year(complete_dates)
)
month_abbr <- c('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec')
# Create a vector of abbreviated month names to numeric conversion
month_abbr_to_num <- function(month) {
match(month, month_abbr)
}
# Convert example abbreviated month names to numeric
df$MonthNum <- month_abbr_to_num(df$Month)
df$Date = as.Date(paste(df$Year, df$MonthNum, df$DayOfMonth, sep = '-'))
# Step 3: Merge this with your data
df_full <- calendar_df %>%
left_join(df, by = "Date", suffix = c("", "_remove"))  %>%
replace_na(list(count = 0)) %>%
select(which(!grepl("remove", names(.))))
View(df)
View(calendar_df)
df %>% group_by(Date) %>%
summarize(count = n())
df_full <- calendar_df %>%
left_join(counts, by = "Date", suffix = c("", "_remove"))
counts = df %>% group_by(Date) %>%
summarize(count = n())
df_full <- calendar_df %>%
left_join(counts, by = "Date", suffix = c("", "_remove"))
View(df_full)
calendar_df$count = 0
counts = df %>% group_by(Date) %>%
summarize(count = n())
# Step 3: Merge this with your data
df_full <- calendar_df %>%
left_join(counts, by = "Date", suffix = c("", "_remove"))  %>%
replace_na(list(count = 0)) %>%
select(which(!grepl("remove", names(.))))
# Step 3: Merge this with your data
df_full <- calendar_df %>%
left_join(counts, by = "Date", suffix = c("", "_remove"))
# Step 3: Merge this with your data
df_full <- calendar_df %>%
left_join(counts, by = "Date",
suffix =c("_remove","")) %>%
replace_na(list(count = 0)) %>%
select(which(!grepl("remove", names(.))))
allYears = unique(year)
results = data.frame(year = allYears,
count = allYears,
naCount = allYears)
for(ii in 1:length(year)){
curDat = cw[cw$year == allYears[ii],]
results$count[ii] = length(curDat$year)
results$naCount[ii] = sum(is.na(curDat$mismanagedTotal))
}
results2 <- cw %>%
group_by(year) %>%
summarize(naCount = sum(is.na(mismanagedTotal)),
n = n()) %>%
mutate(goodVals = n - naCount)
View(results)
allYears
allYears = unique(cw$year)
results = data.frame(year = allYears,
count = allYears,
naCount = allYears)
for(ii in 1:length(year)){
curDat = cw[cw$year == allYears[ii],]
results$count[ii] = length(curDat$year)
results$naCount[ii] = sum(is.na(curDat$mismanagedTotal))
}
results2 <- cw %>%
group_by(year) %>%
summarize(naCount = sum(is.na(mismanagedTotal)),
n = n()) %>%
mutate(goodVals = n - naCount)
View(results2)
#The tidyverse provides a simpler way to do it:
results2 <- cw %>%
group_by(year) %>%
summarize(naCount = sum(is.na(mismanagedTotal)),
n = n()) %>%
mutate(goodVals = n - naCount)
cw = cw %>% filter(!is.na(mismanagedTotal))
View(cw)
names(cw)
cw %>%
group_by(country) %>%
summarize(n = n())
countryCounts = cw %>%
group_by(country) %>%
summarize(n = n())
View(countryCounts)
max(countryCounts$n)
# Chunk 1
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
myGitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
# Load packages
library(tidyverse)
library(janitor) #helps to rename titles
library(tidytuesdayR) #package for loading tidy tuesday datasets
# Load the data
#coastal vs mismanaged waste
cw <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-21/coastal-population-vs-mismanaged-plastic.csv")
# inspect the data
head(cw)
names(cw)
cw <- janitor::clean_names(cw)
names(cw)
# Chunk 1
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
myGitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
# Load packages
library(tidyverse) # data manipulation and visualization
library(janitor) #helps to rename titles
library(tidytuesdayR) #package for loading tidy tuesday datasets
# Chunk 2: load data
# Load the data
#coastal vs mismanaged waste
cw <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-21/coastal-population-vs-mismanaged-plastic.csv")
#mismanaged waste vs gdp
mg <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-21/per-capita-mismanaged-plastic-waste-vs-gdp-per-capita.csv")
#total waste vs. gdp
wg <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-21/per-capita-plastic-waste-vs-gdp-per-capita.csv")
# inspect the data
head(cw)
head(mg)
head(wg)
names(cw)
cw <- janitor::clean_names(cw)
names(cw)
names(mg)
mg <- janitor::clean_names(mg)
names(mg)
names(wg)
wg <- janitor::clean_names(wg)
names(wg)
names(mg)
names(mg)
colnames(mg) <- c('country', 'countryCode', 'year', 'mismanagedPerCap',
'GDPperCap', 'totalPop')
names(mg)
names(wg)
colnames(mg) <- c('country', 'countryCode', 'year', 'totWastePerCap',
'gdpPerCap2', 'totalPop')
names(wg)
# Chunk 1
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
myGitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
# Load packages
library(tidyverse) # data manipulation and visualization
library(janitor) #helps to rename titles
library(tidytuesdayR) #package for loading tidy tuesday datasets
# Chunk 2: load data
# Load the data
#coastal vs mismanaged waste
cw <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-21/coastal-population-vs-mismanaged-plastic.csv")
#mismanaged waste vs gdp
mg <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-21/per-capita-mismanaged-plastic-waste-vs-gdp-per-capita.csv")
#total waste vs. gdp
wg <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-21/per-capita-plastic-waste-vs-gdp-per-capita.csv")
# inspect the data
head(cw)
head(mg)
head(wg)
names(cw)
cw <- janitor::clean_names(cw)
names(cw)
names(mg)
mg <- janitor::clean_names(mg)
names(mg)
names(wg)
wg <- janitor::clean_names(wg)
names(wg)
names(cw)
colnames(cw) <- c('country', 'countryCode', 'year', 'mismanagedTotal',
'coastalPop', 'totalPop')
names(cw)
names(mg)
colnames(mg) <- c('country', 'countryCode', 'year', 'mismanagedPerCap',
'GDPperCap', 'totalPop')
names(mg)
names(wg)
colnames(wg) <- c('country', 'countryCode', 'year', 'totWastePerCap',
'gdpPerCap2', 'totalPop')
names(wg)
#key variable in coast_vs_waste is the mismanaged plastic
dataCount_cw <- cw %>%
select(year, mismanagedTotal) %>%
group_by(year) %>%
summarize(naCount = sum(is.na(mismanaged_plastic_waste_tonnes)),
n = n()) %>%
mutate(goodVals = n - naCount)
#key variable in mismanaged_vs_gdp is per capita mismanaged plastic
dataCount_mg <- mg %>%
select(year, mismanagedPerCap) %>%
group_by(year) %>%
summarize(naCount = sum(is.na(mismanagedPerCap)),
n = n()) %>%
mutate(goodVals = n - naCount)
#key variable in waste_vs_gdp is total per capital plastic waste
dataCount_wg <- wg %>%
select(year, totWastePerCap) %>%
group_by(year) %>%
summarize(naCount = sum(is.na(totWastePerCap)),
n = n()) %>%
mutate(goodVals = n - naCount)
dataCount_cw %>% ggplot(aes(x = year-.5, y = goodVals)) +
geom_point(color = 'green') +
geom_point(data = dataCount_mg, aes(x = year, y = goodVals), color = 'red')+
geom_point(data = dataCount_wg, aes(x = year+.5, y = goodVals),
color = 'black') +
xlim(c(2000, 2015))
# Chunk 1
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
myGitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
# Load packages
library(tidyverse) # data manipulation and visualization
library(janitor) #helps to rename titles
library(tidytuesdayR) #package for loading tidy tuesday datasets
# Chunk 2: load data
# Load the data
#coastal vs mismanaged waste
cw <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-21/coastal-population-vs-mismanaged-plastic.csv")
#mismanaged waste vs gdp
mg <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-21/per-capita-mismanaged-plastic-waste-vs-gdp-per-capita.csv")
#total waste vs. gdp
wg <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-05-21/per-capita-plastic-waste-vs-gdp-per-capita.csv")
# inspect the data
head(cw)
head(mg)
head(wg)
names(cw)
cw <- janitor::clean_names(cw)
names(cw)
names(mg)
mg <- janitor::clean_names(mg)
names(mg)
names(wg)
wg <- janitor::clean_names(wg)
names(wg)
# Chunk 3: hardcode rename
names(cw)
colnames(cw) <- c('country', 'countryCode', 'year', 'mismanagedTotal',
'coastalPop', 'totalPop')
names(cw)
names(mg)
colnames(mg) <- c('country', 'countryCode', 'year', 'mismanagedPerCap',
'GDPperCap', 'totalPop')
names(mg)
names(wg)
colnames(wg) <- c('country', 'countryCode', 'year', 'totWastePerCap',
'gdpPerCap2', 'totalPop')
names(wg)
# Chunk 4: examine valid data
# summarize how many good observations there are for each variable of interest
#key variable in coast_vs_waste is the mismanaged plastic
dataCount_cw <- cw %>%
select(year, mismanagedTotal) %>%
group_by(year) %>%
summarize(naCount = sum(is.na(mismanaged_plastic_waste_tonnes)),
n = n()) %>%
mutate(goodVals = n - naCount)
# summarize how many good observations there are for each variable of interest
#key variable in coast_vs_waste is the mismanaged plastic
dataCount_cw <- cw %>%
select(year, mismanagedTotal) %>%
group_by(year) %>%
summarize(naCount = sum(is.na(mismanagedTotal)),
n = n()) %>%
mutate(goodVals = n - naCount)
#key variable in mismanaged_vs_gdp is per capita mismanaged plastic
dataCount_mg <- mg %>%
select(year, mismanagedPerCap) %>%
group_by(year) %>%
summarize(naCount = sum(is.na(mismanagedPerCap)),
n = n()) %>%
mutate(goodVals = n - naCount)
#key variable in waste_vs_gdp is total per capital plastic waste
dataCount_wg <- wg %>%
select(year, totWastePerCap) %>%
group_by(year) %>%
summarize(naCount = sum(is.na(totWastePerCap)),
n = n()) %>%
mutate(goodVals = n - naCount)
dataCount_cw %>% ggplot(aes(x = year-.5, y = goodVals)) +
geom_point(color = 'green') +
geom_point(data = dataCount_mg, aes(x = year, y = goodVals), color = 'red')+
geom_point(data = dataCount_wg, aes(x = year+.5, y = goodVals),
color = 'black') +
xlim(c(2000, 2015))
#down select to remove missing and check that we only have one year
cw = cw %>% filter(!is.na(mismanagedTotal))
mg <- mg %>% filter(!is.na(mismanagedPerCap))
wg <- wg %>% filter(!is.na(totWastePerCap))
#check that there's only one year for each country in each file:
countryCounts = cw %>%
group_by(country) %>%
summarize(n = n())
max(countryCounts$n)
countryCounts = mg %>%
group_by(country) %>%
summarize(n = n())
max(countryCounts$n)
countryCounts = wg %>%
group_by(country) %>%
summarize(n = n())
max(countryCounts$n)
df <- merge(cw, mg, by = "code", suffixes = c("_df1", "_df2"))
names(cw)
df <- merge(cw, mg, by = "countryCode", suffixes = c("_df1", "_df2"))
names(df)
names(cw)
names(mg)
df <- df %>%
select(-ends_with("_df2"))
names(df)
new_column_names <- gsub("_df1$", "", names(df))
names(df) <- new_column_names
names(df)
df <- merge(df, wg, by = "countryCode", suffixes = c("_df1", "_df2"))
df <- df %>%
select(-ends_with("_df2"))
new_column_names <- gsub("_df1$", "", names(df))
names(df) <- new_column_names
View(df)
df <- df %>% drop_na()
library(tidyverse)
library(kableExtra)
library(haven)
usTrends = read_sav('C:\\Users\\Adam Dede\\Google Drive\\Teaching\\stats\\RCourse\\plotting\\ATP W15.sav')
usTrends = read_sav('G:\\My Drive\\Teaching\\stats\\RCourse\\plotting\\ATP W15.sav')
# https://www.pewresearch.org/politics/dataset/american-trends-panel-wave-15/
#These data were collected between March 2 and 28, 2016
#let's explore the data a bit:
names(usTrends)
#look at these two survey items on the que sheet
usTrends$VIEWSCHAR_W15
usTrends$AGREEPOL_W15
#there were two forms of the survey, let's make a variable to represent this:
usTrends <- usTrends %>%
mutate(form = factor(ifelse(is.na(AGREEPOL_W15), 1, 2),
labels =c('form1', 'form2')))
#both tell us about how much someone believes politics defines someone
#let's combine them both into a single variable
usTrends$noNAview <- usTrends$VIEWSCHAR_W15
usTrends$noNAview[is.na(usTrends$noNAview)] <- 0
usTrends$noNAagree <- usTrends$AGREEPOL_W15
usTrends$noNAagree[is.na(usTrends$noNAagree)] <- 0
#sanity check that the addition is working
usTrends$noNAagree + usTrends$noNAview
#let's look at them in the original data
idx = which(usTrends$noNAagree + usTrends$noNAview == 3)
usTrends$AGREEPOL_W15[idx]
usTrends$VIEWSCHAR_W15[idx]
#3 means someone refused, we can note that:
usTrends <- usTrends %>% mutate(polarized =
factor(noNAview + noNAagree,
labels = c("polar","non-polar","refused")))
#how polarized are people?
ggplot(usTrends, mapping = aes(x = polarized)) +
geom_bar()
#did the way the question was phrased make a difference?
ggplot(usTrends, mapping = aes(x = polarized)) +
geom_bar() +
facet_wrap(~form)
#political party:
usTrends <- usTrends %>% mutate(party = ifelse(VOTEPARTY_W15<3, 'rep',
ifelse(VOTEPARTY_W15<5, 'dem',
'und')))
ggplot(usTrends, mapping = aes(x = party)) +
geom_bar()
counts <- usTrends %>% group_by(party) %>%
summarize(polar=sum(polarized=='polar')/length(polarized),
partyDif = sum(PARTYDIFF_W15<3) / length(PARTYDIFF_W15),
techPos = sum(sciTech=='pos')/length(sciTech),
geneMoral = sum(GEN7_W15==1)/length(GEN7_W15),
chipGood = sum(CHIP2_W15<3)/length(CHIP2_W15))
counts <- usTrends %>% group_by(party) %>%
summarize(polar=sum(polarized=='polar')/length(polarized),
partyDif = sum(PARTYDIFF_W15<3) / length(PARTYDIFF_W15),
# techPos = sum(sciTech=='pos')/length(sciTech),
geneMoral = sum(GEN7_W15==1)/length(GEN7_W15),
chipGood = sum(CHIP2_W15<3)/length(CHIP2_W15))
names(usTrends)
counts %>%
kbl(align = 'cr', digits = 2) %>%
kable_classic(full_width = F,
font_size = 20)
usTrends$PARTYDIFF_W15
usTrends$GEN7_W15
View(usTrends)
plotVals <- counts %>% gather(condition, measurement,
polar:chipGood, factor_key=TRUE)
p<-plotVals %>% ggplot(mapping =
aes(fill = party,
x=condition,
y=measurement)) +
geom_bar(stat = 'identity', position = 'dodge') +
xlab("question") +
ylab("proportion positive/yes")
p + facet_wrap(.~party) +
theme(axis.text.x = element_text(angle=45))
