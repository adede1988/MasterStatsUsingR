library(pracma)
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
df$memDif = df$L1cor_UVSD_d - df$L5_UVSD_d
#first plot the histogram of country total populations
df$dummy = as.factor(1)
df %>% ggplot(aes(x = memDif, color = dummy, fill = dummy)) +
geom_histogram(bins = 10) +
myTheme + brightCol + brightFil + theme(legend.position = 'none')
df %>% ggplot(aes(x = memDif, color = dummy, fill = dummy)) +
geom_histogram(bins = 10) +
xlabel('kasj') +
myTheme + brightCol + brightFil + theme(legend.position = 'none')
df %>% ggplot(aes(x = memDif, color = dummy, fill = dummy)) +
geom_histogram(bins = 10) +
xlab('kasj') +
myTheme + brightCol + brightFil + theme(legend.position = 'none')
df %>% ggplot(aes(x = memDif, color = dummy, fill = dummy)) +
geom_histogram(bins = 10) +
xlab('L5 better     Mem Dif      L1 better') +
myTheme + brightCol + brightFil + theme(legend.position = 'none')
M = 0
#       ALTERNATE:
# not the null
#step 3:
#       ALPHA:
alpha = .05
#       critical t value:
n = length(df$memDif)
critVal = qt(1-(alpha/2),n-1)
#step 4:
m = mean(df$memDif)
s = sd(df$memDif)
sampleT = (m - M) / (s/sqrt(n))
#step 5:
if (sampleT>critVal | sampleT < -critVal){
print('mean value is different from 0!')
} else {
print('no evidence that the mean value is different from 0!')
}
t.test(df$memDif, mu = M)
df = df %>% select(c('L1cor_UVSD_d' - 'L5_UVSD_d')) %>%
pivot_longer(cols = c('L1cor_UVSD_d' - 'L5_UVSD_d'),
names_pattern = '(L1|L5)*',
names_to = 'lag',
values_to = 'd')
df = df %>% select(c('L1cor_UVSD_d' - 'L5_UVSD_d')) %>%
pivot_longer(cols = c('L1cor_UVSD_d', 'L5_UVSD_d'),
names_pattern = '(L1|L5)*',
names_to = 'lag',
values_to = 'd')
df = df %>% select(c('L1cor_UVSD_d', 'L5_UVSD_d')) %>%
pivot_longer(cols = c('L1cor_UVSD_d', 'L5_UVSD_d'),
names_pattern = '(L1|L5)*',
names_to = 'lag',
values_to = 'd')
View(df)
df %>% ggplot(aes(x = d, color = lag, group = lag)) +
geom_freqpoly(bins = 10) +
myTheme + brightCol + brightFil + theme(legend.position = 'none')
df %>% ggplot(aes(x = d, color = lag, group = lag)) +
geom_freqpoly(bins = 10, linewidth = 2) +
myTheme + brightCol + brightFil
df %>% ggplot(aes(x = d, color = lag, group = lag)) +
geom_freqpoly(bins = 15, linewidth = 2) +
myTheme + brightCol + brightFil
df %>% ggplot(aes(x = d, color = lag, group = lag)) +
geom_freqpoly(bins = 12, linewidth = 2) +
myTheme + brightCol + brightFil
df %>% ggplot(aes(x = d, color = lag, group = lag)) +
geom_freqpoly(bins = 20, linewidth = 2) +
myTheme + brightCol + brightFil
df %>% ggplot(aes(x = d, color = lag, group = lag)) +
geom_freqpoly(bins = 8, linewidth = 2) +
myTheme + brightCol + brightFil
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(BSDA)
library(tidyverse) # data manipulation and visualization
source(paste0(gitHubPath, 'courseTheme.R'))
library(pracma)
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
df = df %>% select(c('L1cor_UVSD_d', 'L5_UVSD_d')) %>%
pivot_longer(cols = c('L1cor_UVSD_d', 'L5_UVSD_d'),
names_pattern = '(L1|L5)*',
names_to = 'lag',
values_to = 'd')
df %>% ggplot(aes(x = d, color = lag, group = lag)) +
geom_freqpoly(bins = 8, linewidth = 2) +
myTheme + brightCol + brightFil
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
plotDat = df %>% select(c('L1cor_UVSD_d', 'L5_UVSD_d')) %>%
pivot_longer(cols = c('L1cor_UVSD_d', 'L5_UVSD_d'),
names_pattern = '(L1|L5)*',
names_to = 'lag',
values_to = 'd')
plotDat %>% ggplot(aes(x = d, color = lag, group = lag)) +
geom_freqpoly(bins = 8, linewidth = 2) +
myTheme + brightCol + brightFil
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
df = df %>% select(c('L1cor_UVSD_d', 'L5_UVSD_d')) %>%
pivot_longer(cols = c('L1cor_UVSD_d', 'L5_UVSD_d'),
names_pattern = '(L1|L5)*',
names_to = 'lag',
values_to = 'd')
df %>% ggplot(aes(x = d, color = lag, group = lag)) +
geom_freqpoly(bins = 8, linewidth = 2) +
myTheme + brightCol + brightFil
names(df)
#step 1: Do people exhibit different memory for images from L1 vs L5 trials?
#step 2:
#       NULL:
M = 0
#       ALTERNATE:
# not the null
#step 3:
#       ALPHA:
alpha = .05
#       critical t value:
n = length(df$d)
critVal = qt(1-(alpha/2),n-2)
#step 4:
m1 = mean(df[df$lag=='L1']$d)
df$lag
#step 4:
m1 = mean(df$d[df$lag=='L1'])
m5 = mean(df$d[df$lag=='L5'])
SS1 = (df$d[df$lag=='L1'] - m1)^2
SS5 = (df$d[df$lag=='L5'] - m5)^2
s = sqrt((SS1+SS5)/(n-2))
SS1 = sum((df$d[df$lag=='L1'] - m1)^2)
SS5 = sum((df$d[df$lag=='L5'] - m5)^2)
s = sqrt((SS1+SS5)/(n-2))
sqrt((SS1/((n/2)-1)) + (SS5/((n/2)-1)))
n1 = sum(df$lag=='L1')
n5 = sum(df$lag=='L5')
n = n1 + n5
m1 = mean(df$d[df$lag=='L1'])
m5 = mean(df$d[df$lag=='L5'])
SS1 = sum((df$d[df$lag=='L1'] - m1)^2)
SS5 = sum((df$d[df$lag=='L5'] - m5)^2)
spooled = sqrt((SS1+SS5)/(n-2))
SEpooled = spooled*sqrt(1/n1 + 1/n5)
sampleT = (m1 - m5) / SEpooled
# Chunk 1
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(BSDA)
library(tidyverse) # data manipulation and visualization
source(paste0(gitHubPath, 'courseTheme.R'))
library(pracma)
# Chunk 2: data
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
df$memDif = df$L1cor_UVSD_d - df$L5_UVSD_d
#first plot the histogram of country total populations
df$dummy = as.factor(1)
df %>% ggplot(aes(x = memDif, color = dummy, fill = dummy)) +
geom_histogram(bins = 10) +
xlab('L5 better     Mem Dif      L1 better') +
myTheme + brightCol + brightFil + theme(legend.position = 'none')
#step 1: Do people exhibit different memory for images from L1 vs L5 trials?
#step 2:
#       NULL:
M = 0
#       ALTERNATE:
# not the null
#step 3:
#       ALPHA:
alpha = .05
#       critical t value:
n = length(df$memDif)
critVal = qt(1-(alpha/2),n-1)
#step 4:
m = mean(df$memDif)
s = sd(df$memDif)
sampleT = (m - M) / (s/sqrt(n))
#step 5:
if (sampleT>critVal | sampleT < -critVal){
print('mean value is different from 0!')
} else {
print('no evidence that the mean value is different from 0!')
}
#step 6:
#What does the result in step 5 mean for answering our original question?
t.test(df$memDif, mu = M)
t.test(df$d[df$lag=='L1'], df$d[df$lag=='L5'])
df$d[df$lag=='L1']
# Chunk 1
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(BSDA)
library(tidyverse) # data manipulation and visualization
source(paste0(gitHubPath, 'courseTheme.R'))
library(pracma)
# Chunk 2: data
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
df = df %>% select(c('L1cor_UVSD_d', 'L5_UVSD_d')) %>%
pivot_longer(cols = c('L1cor_UVSD_d', 'L5_UVSD_d'),
names_pattern = '(L1|L5)*',
names_to = 'lag',
values_to = 'd')
df %>% ggplot(aes(x = d, color = lag, group = lag)) +
geom_freqpoly(bins = 8, linewidth = 2) +
myTheme + brightCol + brightFil
t.test(df$d[df$lag=='L1'], df$d[df$lag=='L5'])
names(df)
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
names(df)
df$X.1
df %>% ggplot(aes(x = L1cor_UVSD_d, y= L5_UVSD_d, color = as.factor(X)) +
geom_point(size = 2) + myTheme
df %>% ggplot(aes(x = L1cor_UVSD_d, y= L5_UVSD_d, color = as.factor(X))) +
geom_point(size = 2) + myTheme
df %>% ggplot(aes(x = L1cor_UVSD_d, y= L5_UVSD_d, color = as.factor(X))) +
geom_point(size = 2) + myTheme + theme(legend.position = 'none')
df %>% ggplot(aes(x = L1cor_UVSD_d, y= L5_UVSD_d)) +
geom_point(size = 2, color = 'orange') + myTheme
df %>% ggplot(aes(x = L1cor_UVSD_d, y= L5_UVSD_d)) +
geom_point(size = 2, color = 'orange') + myTheme +
geom_abline(slope = 1, intercept = 0, color = 'green')
sum(df$L1cor_UVSD_d > df$L5_UVSD_d)
sum(df$L1cor_UVSD_d > df$L5_UVSD_d) / length(df$X.1)
# Chunk 1
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(BSDA)
library(tidyverse) # data manipulation and visualization
source(paste0(gitHubPath, 'courseTheme.R'))
library(pracma)
# Chunk 2: data
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
df$memDif = df$L1cor_UVSD_d - df$L5_UVSD_d
#first plot the histogram of country total populations
df$dummy = as.factor(1)
df %>% ggplot(aes(x = memDif, color = dummy, fill = dummy)) +
geom_histogram(bins = 10) +
xlab('L5 better     Mem Dif      L1 better') +
myTheme + brightCol + brightFil + theme(legend.position = 'none')
#step 1: Do people exhibit different memory for images from L1 vs L5 trials?
#step 2:
#       NULL:
M = 0
#       ALTERNATE:
# not the null
#step 3:
#       ALPHA:
alpha = .05
#       critical t value:
n = length(df$memDif)
critVal = qt(1-(alpha/2),n-1)
#step 4:
m = mean(df$memDif)
s = sd(df$memDif)
sampleT = (m - M) / (s/sqrt(n))
#step 5:
if (sampleT>critVal | sampleT < -critVal){
print('mean value is different from 0!')
} else {
print('no evidence that the mean value is different from 0!')
}
#step 6:
#What does the result in step 5 mean for answering our original question?
t.test(df$memDif, mu = M)
s = sd(df$memDif)
(s/sqrt(n)
)
# Chunk 1
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(BSDA)
library(tidyverse) # data manipulation and visualization
source(paste0(gitHubPath, 'courseTheme.R'))
library(pracma)
# Chunk 2: data
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
df = df %>% select(c('L1cor_UVSD_d', 'L5_UVSD_d')) %>%
pivot_longer(cols = c('L1cor_UVSD_d', 'L5_UVSD_d'),
names_pattern = '(L1|L5)*',
names_to = 'lag',
values_to = 'd')
df %>% ggplot(aes(x = d, color = lag, group = lag)) +
geom_freqpoly(bins = 8, linewidth = 2) +
myTheme + brightCol + brightFil
# Chunk 3: t test
#step 1: Do people exhibit different memory for images from L1 vs L5 trials?
#step 2:
#       NULL:
M = 0
#       ALTERNATE:
# not the null
#step 3:
#       ALPHA:
alpha = .05
#       critical t value:
n1 = sum(df$lag=='L1')
n5 = sum(df$lag=='L5')
n = n1 + n5
critVal = qt(1-(alpha/2),n-2)
#step 4:
m1 = mean(df$d[df$lag=='L1'])
m5 = mean(df$d[df$lag=='L5'])
SS1 = sum((df$d[df$lag=='L1'] - m1)^2)
SS5 = sum((df$d[df$lag=='L5'] - m5)^2)
spooled = sqrt((SS1+SS5)/(n-2))
SEpooled = spooled*sqrt(1/n1 + 1/n5)
sampleT = (m1 - m5) / SEpooled
#step 5:
if (sampleT>critVal | sampleT < -critVal){
print('mean value is different from 0!')
} else {
print('no evidence that the mean value is different from 0!')
}
#step 6:
#What does the result in step 5 mean for answering our original question?
t.test(df$d[df$lag=='L1'], df$d[df$lag=='L5'])
m1 - m5
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(BSDA)
library(tidyverse) # data manipulation and visualization
source(paste0(gitHubPath, 'courseTheme.R'))
library(pracma)
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(BSDA)
library(tidyverse) # data manipulation and visualization
source(paste0(gitHubPath, 'courseTheme.R'))
library(pracma)
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
#first plot the histogram of country total populations
df$dummy = as.factor(1)
df %>% ggplot(aes(x = TargALL_UVSD_d, color = dummy, fill = dummy)) +
geom_histogram(bins = 10) +
myTheme + brightCol + brightFil + theme(legend.position = 'none')
n = length(df$TargALL_UVSD_d)
critVal = qt(1-alpha/2,n-1)
#question: what is the range of values that we can be 95% confident the
#population memory score is within?
alpha = .05 # 1-alpha = confidence interval range
#       critical t value:
n = length(df$TargALL_UVSD_d)
critVal = qt(1-alpha/2,n-1)
n = length(df$TargALL_UVSD_d)
critVal = qt(1-alpha/2,n-1)
#calcualte standard error
m = mean(df$TargALL_UVSD_d)
s = sd(df$TargALL_UVSD_d)
se = s / sqrt(n)
#calculate bounds
upperBound = m + critVal*se
lowerBound = m - critVal*se
#print an output:
print(paste0('With ', 100*(1-alpha), '% confidence, the population mean is',
' between: ', lowerBound, ' and ', upperBound))
#print an output:
print(paste0('With ', 100*(1-alpha), '% confidence, the population mean is',
' between: ', round(lowerBound,2), ' and ', round(upperBound,2)))
t.test(df$TargALL_UVSD_d)
# Chunk 1
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(BSDA)
library(tidyverse) # data manipulation and visualization
source(paste0(gitHubPath, 'courseTheme.R'))
library(pracma)
# Chunk 2: data
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
#first plot the histogram of country total populations
df$dummy = as.factor(1)
df %>% ggplot(aes(x = TargALL_UVSD_d, color = dummy, fill = dummy)) +
geom_histogram(bins = 10) +
myTheme + brightCol + brightFil + theme(legend.position = 'none')
df$TargALL_UVSD_d[3] = 10000
#step 1: Do people tested using this method exhibit ABOVE chance memory?
#step 2:
#       NULL:
M = 0
#       ALTERNATE:
# not the null
#step 3:
#       ALPHA:
alpha = .05
#       critical t value:
n = length(df$TargALL_UVSD_d)
critVal = qt(1-alpha,n-1)
#step 4:
m = mean(df$TargALL_UVSD_d)
s = sd(df$TargALL_UVSD_d)
sampleT = (m - M) / (s/sqrt(n))
#step 5:
if (sampleT>critVal){
print('mean value is greater than critical threshold!')
} else {
print('mean value is not greater than critical threshold!')
}
t.test(df$TargALL_UVSD_d, mu = M)
# Chunk 1
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(BSDA)
library(tidyverse) # data manipulation and visualization
source(paste0(gitHubPath, 'courseTheme.R'))
library(pracma)
# Chunk 2: data
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
#first plot the histogram of country total populations
df$dummy = as.factor(1)
df %>% ggplot(aes(x = TargALL_UVSD_d, color = dummy, fill = dummy)) +
geom_histogram(bins = 10) +
myTheme + brightCol + brightFil + theme(legend.position = 'none')
S = sd(df$TargALL_UVSD_d)
#what if we make someone's memory be 10000? This is just crazy high!
df$TargALL_UVSD_d[3] = 10000
t.test(df$TargALL_UVSD_d, mu = M)
z.test(df$TargALL_UVSD_d, mu = M, sigma = S)
z.test(df$TargALL_UVSD_d, mu = M, sigma.x = S)
S = sd(df$TargALL_UVSD_d)
#let's compare z and t-tests
t.test(df$TargALL_UVSD_d, mu = M)
z.test(df$TargALL_UVSD_d, mu = M, sigma.x = S)
# Chunk 1
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(BSDA)
library(tidyverse) # data manipulation and visualization
source(paste0(gitHubPath, 'courseTheme.R'))
library(pracma)
# Chunk 2: data
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
#first plot the histogram of country total populations
df$dummy = as.factor(1)
df %>% ggplot(aes(x = TargALL_UVSD_d, color = dummy, fill = dummy)) +
geom_histogram(bins = 10) +
myTheme + brightCol + brightFil + theme(legend.position = 'none')
S = sd(df$TargALL_UVSD_d)
#let's compare z and t-tests
t.test(df$TargALL_UVSD_d, mu = M)
z.test(df$TargALL_UVSD_d, mu = M, sigma.x = S)
df$TargALL_UVSD_d[3] = 10000
t.test(df$TargALL_UVSD_d, mu = M)
z.test(df$TargALL_UVSD_d, mu = M, sigma.x = S)
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
#what if we add 10000 to each person?
df$TargALL_UVSD_d = df$TargALL_UVSD_d + 10000
t.test(df$TargALL_UVSD_d, mu = M)
z.test(df$TargALL_UVSD_d, mu = M, sigma.x = S)
# Chunk 1
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath = 'C:\\Users\\Adam\\Documents\\GitHub\\MasterStatsUsingR\\'
library(BSDA)
library(tidyverse) # data manipulation and visualization
source(paste0(gitHubPath, 'courseTheme.R'))
library(pracma)
# Chunk 2: data
df = read.csv(paste0(gitHubPath, 'data\\MemoryData.csv'))
df <- df %>% filter(TargALL_UVSD_d >=0)
#first plot the histogram of country total populations
df$dummy = as.factor(1)
df %>% ggplot(aes(x = TargALL_UVSD_d, color = dummy, fill = dummy)) +
geom_histogram(bins = 10) +
myTheme + brightCol + brightFil + theme(legend.position = 'none')
#step 1: Do people tested using this method exhibit ABOVE chance memory?
#step 2:
#       NULL:
M = 0
#       ALTERNATE:
# not the null
#step 3:
#       ALPHA:
alpha = .05
#       critical t value:
n = length(df$TargALL_UVSD_d)
critVal = qt(1-alpha,n-1)
#step 4:
m = mean(df$TargALL_UVSD_d)
s = sd(df$TargALL_UVSD_d)
sampleT = (m - M) / (s/sqrt(n))
#step 5:
if (sampleT>critVal){
print('mean value is greater than critical threshold!')
} else {
print('mean value is not greater than critical threshold!')
}
#step 6:
#What does the result in step 5 mean for answering our original question?
t.test(df$TargALL_UVSD_d, mu = M)
