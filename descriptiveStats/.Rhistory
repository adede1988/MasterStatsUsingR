type = c('mean', 'mod', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3) +
guides(
linetype = guide_legend(
override.aes = list(color = "pink"),
override.aes = list(size = 1)# Adjust the color of points in the size legend
)) +
theme(
legend.key.size = unit(1.5, "cm"))
p + geom_vline(data = data.frame(centralTend = unlist(group_averages[2, 2:4]),
dist = c('lnorm', 'lnorm', 'lnorm'),
type = c('mean', 'mod', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3) +
guides(
linetype = guide_legend(
override.aes = list(color = "pink", size = 1)# Adjust the color of points in the size legend
)) +
theme(
legend.key.size = unit(1.5, "cm"))
p + geom_vline(data = data.frame(centralTend = unlist(group_averages[2, 2:4]),
dist = c('lnorm', 'lnorm', 'lnorm'),
type = c('mean', 'mod', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3) +
guides(
linetype = guide_legend(
override.aes = list(color = "pink", size = .1)# Adjust the color of points in the size legend
)) +
theme(
legend.key.size = unit(1.5, "cm"))
p + geom_vline(data = data.frame(centralTend = unlist(group_averages[2, 2:4]),
dist = c('lnorm', 'lnorm', 'lnorm'),
type = c('mean', 'mod', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3) +
guides(
linetype = guide_legend(
override.aes = list(size = .1)# Adjust the color of points in the size legend
)) +
theme(
legend.key.size = unit(1.5, "cm"))
p + geom_vline(data = data.frame(centralTend = unlist(group_averages[2, 2:4]),
dist = c('lnorm', 'lnorm', 'lnorm'),
type = c('mean', 'mod', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3) +
guides(
linetype = guide_legend(
override.aes = list(size = .1)# Adjust the color of points in the size legend
))
p + geom_vline(data = data.frame(centralTend = unlist(group_averages[2, 2:4]),
dist = c('lnorm', 'lnorm', 'lnorm'),
type = c('mean', 'mod', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3) +
guides(
linetype = guide_legend(
override.aes = list(size = 6)# Adjust the color of points in the size legend
)) +
theme(
legend.key.size = unit(1.5, "cm"))
p + geom_vline(data = data.frame(centralTend = unlist(group_averages[2, 2:4]),
dist = c('lnorm', 'lnorm', 'lnorm'),
type = c('mean', 'mod', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3) +
guides(
linetype = guide_legend(
override.aes = list(size = 6)# Adjust the color of points in the size legend
))
p + geom_vline(data = data.frame(centralTend = unlist(group_averages[2, 2:4]),
dist = c('lnorm', 'lnorm', 'lnorm'),
type = c('mean', 'mod', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3) +
guides(
linetype = guide_legend(
override.aes = list(color = "pink")# Adjust the color of points in the size legend
)) +
theme(
legend.key.size = unit(3, "cm"))
group_averages
p <- df %>% filter(dist == 'unif') %>%
ggplot(aes(x = observed, group = dist, color = dist, fill = dist)) +
geom_freqpoly(breaks = seq(-1.5, 9.5, 1), linewidth = 3) +
myTheme + brightCol + brightFil
p + geom_vline(data = data.frame(centralTend = unlist(group_averages[3, 2:4]),
dist = c('unif', 'unif', 'unif'),
type = c('mean', 'mod', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3) +
guides(
linetype = guide_legend(
override.aes = list(color = "pink")# Adjust the color of points in the size legend
)) +
theme(
legend.key.size = unit(3, "cm"))
group_means <- df  %>%
group_by(dist) %>%
summarise(mean_val = mean(observed),
mode_val = Mode(observed),
median_val = median(observed)) %>%
pivot_longer(cols = -all_of(c('dist')),
values_to = 'centralTend',
names_to = 'type')
View(group_means)
df  %>%
group_by(dist) %>%
summarise(mean_val = mean(observed),
mode_val = Mode(round(observed,1)),
median_val = median(observed))
sampSize = 10000
df = data.frame('norm' = rnorm(sampSize, 3, 1),
'lnorm' = rlnorm(sampSize,log(3), 1),
'unif' = runif(sampSize,-2, 8),
'pois' = rpois(sampSize, lambda = 3))
df <- df %>% pivot_longer(cols = c(names(df)),
values_to = 'observed',
names_to = 'dist')
p <- df %>% filter(dist == 'norm') %>%
ggplot(aes(x = observed, group = dist, color = dist, fill = dist)) +
geom_freqpoly(breaks = seq(-1, 7, .1), linewidth = 3) +
myTheme + brightCol + brightFil
print(p)
normDat = df$observed[df$dist == 'norm']
#what's the mean value?
# mean = sum(x) / length(x)
sum(normDat) / length(normDat) -> meanVal
#what's the median value?
#value in the middle:
normDat = sort(normDat)
if(mod(length(normDat),2) ==0) { #even length!
midVal = length(normDat)/2
(normDat[midVal] + normDat[midVal+1]) / 2 -> medVal
} else { #odd length!
midVal = length(normDat)/2  + .5
normDat[midVal] -> medVal
}
#what's the modal value?
uniSet = unique(normDat)
#are there even any repeated values?
if(length(uniSet) == length(normDat)){ #every value unique!
sort(normDat)[1] -> modVal
} else { #there's going to be a proper mode!
lengths = rep(0, length(uniSet))
for(jj in 1:length(uniSet)){
lengths[jj] = sum(normDat==uniSet[jj])
}
uniSet[which.max(lengths)] -> modVal
}
#tip: try rounding the values to the nearest tenths place then recalcualte the mode
# Add vertical lines for group means
p + geom_vline(data = data.frame(centralTend = c(meanVal, modVal, medVal),
dist = c('norm', 'norm', 'norm'),
type = c('mean', 'mode', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3)
normDat = df$observed[df$dist == 'norm']
#what's the mean value?
# mean = sum(x) / length(x)
sum(normDat) / length(normDat) -> meanVal
#what's the median value?
#value in the middle:
normDat = sort(normDat)
if(mod(length(normDat),2) ==0) { #even length!
midVal = length(normDat)/2
(normDat[midVal] + normDat[midVal+1]) / 2 -> medVal
} else { #odd length!
midVal = length(normDat)/2  + .5
normDat[midVal] -> medVal
}
#what's the modal value?
round(normDat) -> normDat
uniSet = unique(normDat)
#are there even any repeated values?
if(length(uniSet) == length(normDat)){ #every value unique!
sort(normDat)[1] -> modVal
} else { #there's going to be a proper mode!
lengths = rep(0, length(uniSet))
for(jj in 1:length(uniSet)){
lengths[jj] = sum(normDat==uniSet[jj])
}
uniSet[which.max(lengths)] -> modVal
}
#tip: try rounding the values to the nearest tenths place then recalcualte the mode
# Add vertical lines for group means
p + geom_vline(data = data.frame(centralTend = c(meanVal, modVal, medVal),
dist = c('norm', 'norm', 'norm'),
type = c('mean', 'mode', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3)
#how many distributions do we have data for?
dists = unique(df$dist)
L = length(dists)
#create a data.frame to put all the central tendancy values into:
group_averages = data.frame('dist' = dists,
'meanVal' = rep(NA,L),
'modeVal' = rep(NA,L),
'medianVal' = rep(NA,L))
for(ii in 1:L){
curDat = df$observed[df$dist == dists[ii]]
#what's the mean value?
# mean = sum(x) / length(x)
group_averages$meanVal[ii] = sum(curDat) / length(curDat)
#what's the median value?
#value in the middle:
curDat = sort(curDat)
if(mod(length(curDat),2) ==0) { #even length!
midVal = length(curDat)/2
group_averages$medianVal[ii] = (curDat[midVal] + curDat[midVal+1]) / 2
} else { #odd length!
midVal = length(curDat)/2  + .5
group_averages$medianVal[ii] = curDat[midVal]
}
#what's the modal value?
round(curDat, 1) -> curDat
uniSet = unique(curDat)
#are there even any repeated values?
if(length(uniSet) == length(curDat)){ #every value unique!
group_averages$modeVal[ii] = curDat[1]
} else { #there's going to be a proper mode!
lengths = rep(0, length(uniSet))
for(jj in 1:length(uniSet)){
lengths[jj] = sum(curDat==uniSet[jj])
}
group_averages$modeVal[ii] = uniSet[which.max(lengths)]
}
}
p <- df %>% filter(dist == 'pois') %>%
ggplot(aes(x = observed, group = dist, color = dist, fill = dist)) +
geom_freqpoly(breaks = seq(-1.5, 9.5, 1), linewidth = 3) +
myTheme + brightCol + brightFil
print(p)
p + geom_vline(data = data.frame(centralTend = unlist(group_averages[4, 2:4]),
dist = c('pois', 'pois', 'pois'),
type = c('mean', 'mod', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3)
#lnorm:
p <- df %>% filter(dist == 'lnorm') %>%
ggplot(aes(x = observed, group = dist, color = dist, fill = dist)) +
geom_freqpoly(breaks = seq(-1.5, 9.5, 1), linewidth = 3) +
myTheme + brightCol + brightFil
p + geom_vline(data = data.frame(centralTend = unlist(group_averages[2, 2:4]),
dist = c('lnorm', 'lnorm', 'lnorm'),
type = c('mean', 'mod', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3) +
guides(
linetype = guide_legend(
override.aes = list(color = "pink")
)) +
theme(
legend.key.size = unit(3, "cm"))
#unif:
p <- df %>% filter(dist == 'unif') %>%
ggplot(aes(x = observed, group = dist, color = dist, fill = dist)) +
geom_freqpoly(breaks = seq(-1.5, 9.5, 1), linewidth = 3) +
myTheme + brightCol + brightFil
p + geom_vline(data = data.frame(centralTend = unlist(group_averages[3, 2:4]),
dist = c('unif', 'unif', 'unif'),
type = c('mean', 'mod', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3) +
guides(
linetype = guide_legend(
override.aes = list(color = "pink")# Adjust the color of the legend
)) +
theme(
legend.key.size = unit(3, "cm"))
df  %>%
group_by(dist) %>%
summarise(mean_val = mean(observed),
mode_val = Mode(round(observed,1)),
median_val = median(observed))
group_averages
sampSize = 10000
df = data.frame('norm' = rnorm(sampSize, 3, 1),
'lnorm' = rlnorm(sampSize,log(3), 1),
'unif' = runif(sampSize,-2, 8),
'pois' = rpois(sampSize, lambda = 3))
df <- df %>% pivot_longer(cols = c(names(df)),
values_to = 'observed',
names_to = 'dist')
p <- df %>% filter(dist == 'norm') %>%
ggplot(aes(x = observed, group = dist, color = dist, fill = dist)) +
geom_freqpoly(breaks = seq(-1, 7, .1), linewidth = 3) +
myTheme + brightCol + brightFil
print(p)
#how many distributions do we have data for?
dists = unique(df$dist)
L = length(dists)
#create a data.frame to put all the central tendancy values into:
group_averages = data.frame('dist' = dists,
'meanVal' = rep(NA,L),
'modeVal' = rep(NA,L),
'medianVal' = rep(NA,L))
for(ii in 1:L){
curDat = df$observed[df$dist == dists[ii]]
#what's the mean value?
# mean = sum(x) / length(x)
group_averages$meanVal[ii] = sum(curDat) / length(curDat)
#what's the median value?
#value in the middle:
curDat = sort(curDat)
if(mod(length(curDat),2) ==0) { #even length!
midVal = length(curDat)/2
group_averages$medianVal[ii] = (curDat[midVal] + curDat[midVal+1]) / 2
} else { #odd length!
midVal = length(curDat)/2  + .5
group_averages$medianVal[ii] = curDat[midVal]
}
#what's the modal value?
round(curDat, 1) -> curDat
uniSet = unique(curDat)
#are there even any repeated values?
if(length(uniSet) == length(curDat)){ #every value unique!
group_averages$modeVal[ii] = curDat[1]
} else { #there's going to be a proper mode!
lengths = rep(0, length(uniSet))
for(jj in 1:length(uniSet)){
lengths[jj] = sum(curDat==uniSet[jj])
}
group_averages$modeVal[ii] = uniSet[which.max(lengths)]
}
}
p <- df %>% filter(dist == 'pois') %>%
ggplot(aes(x = observed, group = dist, color = dist, fill = dist)) +
geom_freqpoly(breaks = seq(-1.5, 9.5, 1), linewidth = 3) +
myTheme + brightCol + brightFil
print(p)
p + geom_vline(data = data.frame(centralTend = unlist(group_averages[4, 2:4]),
dist = c('pois', 'pois', 'pois'),
type = c('mean', 'mod', 'med')),
aes(xintercept = centralTend,
color = dist,
linetype = type), size = 3)
group_averages
# Calculate group means
df  %>%
group_by(dist) %>%
summarise(mean_val = mean(observed),
mode_val = Mode(round(observed,1)),
median_val = median(observed))
group_averages
df  %>%
group_by(dist) %>%
summarise(mean_val = mean(observed),
mode_val = Mode(round(observed,1)),
median_val = median(observed)) ->builtinAvg
df <- merge(df, builtinAvg)
View(df)
names(df)
df %>% ggplot(aes(x = observed, color = dist)) +
geom_freqpoly(breaks = seq(-1.5, 7, 1)) +
geom_vline(aes(xintercept = mean_val), linetype = 'solid') +
geom_vline(aes(xintercept = mode_val), linetype = 'dashed') +
geom_vline(aes(xintercept = median_val), linetype = 'dotted') +
facet_grid(~dist)
df %>% ggplot(aes(x = observed, color = dist)) +
geom_freqpoly(breaks = seq(-1.5, 8, 1)) +
geom_vline(aes(xintercept = mean_val), linetype = 'solid') +
geom_vline(aes(xintercept = mode_val), linetype = 'dashed') +
geom_vline(aes(xintercept = median_val), linetype = 'dotted') +
facet_grid(~dist) + myTheme + myCol
df %>% ggplot(aes(x = observed, color = dist)) +
geom_freqpoly(breaks = seq(-1.5, 8, 1)) +
geom_vline(aes(xintercept = mean_val), linetype = 'solid') +
geom_vline(aes(xintercept = mode_val), linetype = 'dashed') +
geom_vline(aes(xintercept = median_val), linetype = 'dotted') +
facet_grid(~dist) + myTheme + brightCol
df %>% ggplot(aes(x = observed, color = dist)) +
geom_freqpoly(breaks = seq(-1.5, 8, 1)) +
geom_vline(aes(xintercept = mean_val, color = dist), linetype = 'solid') +
geom_vline(aes(xintercept = mode_val, color = dist), linetype = 'dashed') +
geom_vline(aes(xintercept = median_val, color = dist), linetype = 'dotted') +
facet_grid(~dist) + myTheme + brightCol
df %>% ggplot(aes(x = observed, color = dist)) +
geom_freqpoly(breaks = seq(-1.5, 8, 1), linewidth = 2) +
geom_vline(aes(xintercept = mean_val, color = dist), linetype = 'solid') +
geom_vline(aes(xintercept = mode_val, color = dist), linetype = 'dashed') +
geom_vline(aes(xintercept = median_val, color = dist), linetype = 'dotted') +
facet_grid(dist~.) + myTheme + brightCol
df %>% ggplot(aes(x = observed, color = dist)) +
geom_freqpoly(breaks = seq(-1.5, 8, 1), linewidth = 2) +
facet_grid(dist~.) + myTheme + brightCol -> p
print(p)
p +
geom_vline(aes(xintercept = mean_val, color = dist), linetype = 'solid') +
geom_vline(aes(xintercept = mode_val, color = dist), linetype = 'dashed') +
geom_vline(aes(xintercept = median_val, color = dist), linetype = 'dotted')
group_averages
sampSize = 10000
df = data.frame('norm' = rnorm(sampSize, 3, 1),
'lnorm' = rlnorm(sampSize,log(3), 1),
'unif' = runif(sampSize,-2, 8),
'pois' = rpois(sampSize, lambda = 3))
df <- df %>% pivot_longer(cols = c(names(df)),
values_to = 'observed',
names_to = 'dist')
p <- df %>% filter(dist == 'norm') %>%
ggplot(aes(x = observed, group = dist, color = dist, fill = dist)) +
geom_freqpoly(breaks = seq(-1, 7, .1), linewidth = 3) +
myTheme + brightCol + brightFil
print(p)
normDat = df$observed[df$dist == 'norm']
#what's the mean value?
# mean = sum(x) / length(x)
sum(normDat) / length(normDat) -> meanVal
#what's the median value?
#value in the middle:
normDat = sort(normDat)
if(mod(length(normDat),2) ==0) { #even length!
midVal = length(normDat)/2
(normDat[midVal] + normDat[midVal+1]) / 2 -> medVal
} else { #odd length!
midVal = length(normDat)/2  + .5
normDat[midVal] -> medVal
}
#what's the modal value?
round(normDat) -> normDat
uniSet = unique(normDat)
#are there even any repeated values?
if(length(uniSet) == length(normDat)){ #every value unique!
sort(normDat)[1] -> modVal
} else { #there's going to be a proper mode!
lengths = rep(0, length(uniSet))
for(jj in 1:length(uniSet)){
lengths[jj] = sum(normDat==uniSet[jj])
}
uniSet[which.max(lengths)] -> modVal
}
#tip: try rounding the values to the nearest tenths place then recalcualte the mode
# Add vertical lines for group means
p + geom_vline(xintercept = 2.99, linetype = 'solid', size = 3) +
geom_vline(xintercept = 3.2, linetype = 'solid', size = 3) +
geom_vline(xintercept = 2.99, linetype = 'solid', size = 3)
p + geom_vline(xintercept = 2.99, linetype = 'solid', size = 3, color = 'red') +
geom_vline(xintercept = 3.2, linetype = 'solid', size = 3, color = 'red') +
geom_vline(xintercept = 2.99, linetype = 'solid', size = 3, color = 'red')
p + geom_vline(xintercept = 2.99, linetype = 'solid', size = 3, color = 'red') +
geom_vline(xintercept = 3.2, linetype = 'dashed', size = 3, color = 'red') +
geom_vline(xintercept = 2.99, linetype = 'dotted', size = 3, color = 'red')
group_averages
p + geom_vline(xintercept = 2.99, linetype = 'solid', size = 3) +
geom_vline(xintercept = 3.2, linetype = 'dashed', size = 3) +
geom_vline(xintercept = 2.99, linetype = 'dotted', size = 3)
p + geom_vline(xintercept = 2.99, linetype = 'solid', size = 3, color = 'red') +
geom_vline(xintercept = 3.2, linetype = 'dashed', size = 3, color = 'red') +
geom_vline(xintercept = 2.99, linetype = 'dotted', size = 3, color = 'red')
p <- df %>% filter(dist == 'pois') %>%
ggplot(aes(x = observed, group = dist, color = dist, fill = dist)) +
geom_freqpoly(breaks = seq(-1.5, 9.5, 1), linewidth = 3) +
myTheme + brightCol + brightFil
print(p)
p + geom_vline(xintercept = 2.99, linetype = 'solid', size = 3, color = 'red') +
geom_vline(xintercept = 3.2, linetype = 'dashed', size = 3, color = 'red') +
geom_vline(xintercept = 2.99, linetype = 'dotted', size = 3, color = 'red')
group_averages
p + geom_vline(xintercept = 2.99, linetype = 'solid', size = 3, color = 'red') +
geom_vline(xintercept = 3.0, linetype = 'dashed', size = 3, color = 'red') +
geom_vline(xintercept = 3.0, linetype = 'dotted', size = 3, color = 'red')
p <- df %>% filter(dist == 'lnorm') %>%
ggplot(aes(x = observed, group = dist, color = dist, fill = dist)) +
geom_freqpoly(breaks = seq(-1.5, 9.5, 1), linewidth = 3) +
myTheme + brightCol + brightFil
p + geom_vline(xintercept = 4.97, linetype = 'solid', size = 3, color = 'red') +
geom_vline(xintercept = 1.3, linetype = 'dashed', size = 3, color = 'red') +
geom_vline(xintercept = 3.04, linetype = 'dotted', size = 3, color = 'red')
p <- df %>% filter(dist == 'unif') %>%
ggplot(aes(x = observed, group = dist, color = dist, fill = dist)) +
geom_freqpoly(breaks = seq(-1.5, 9.5, 1), linewidth = 3) +
myTheme + brightCol + brightFil
p + geom_vline(xintercept = 2.96, linetype = 'solid', size = 3, color = 'red') +
geom_vline(xintercept = 6.97, linetype = 'dashed', size = 3, color = 'red') +
geom_vline(xintercept = 2.94, linetype = 'dotted', size = 3, color = 'red')
# Calculate group means
df  %>%
group_by(dist) %>%
summarise(mean_val = mean(observed),
mode_val = Mode(round(observed,1)),
median_val = median(observed)) -> builtinAvg
## challenge:
## 1) merge the central tendency measures with the data
## 2) generate all the freq_poly plots for all distributions at once!
## 3) put all the central tendency measures on all of them at once!
## hint: use faceting to make the plots easy to read
df <- merge(df, builtinAvg)
df %>% ggplot(aes(x = observed, color = dist)) +
geom_freqpoly(breaks = seq(-1.5, 8, 1), linewidth = 2) +
facet_grid(dist~.) + myTheme + brightCol -> p
print(p)
p +
geom_vline(aes(xintercept = mean_val, color = dist), linetype = 'solid') +
geom_vline(aes(xintercept = mode_val, color = dist), linetype = 'dashed') +
geom_vline(aes(xintercept = median_val, color = dist), linetype = 'dotted')
