df %>% group_by(week) %>%
summarize(weeklyMean = mean(SalesInThousands),
se = sd(SalesInThousands)/sqrt(n())) %>%
ggplot(aes(x = week, y = weeklyMean, group = 1)) +
geom_line(linewidth = 3, color = 'green') +
geom_point(size = 3, color = 'green') +
geom_errorbar(aes(ymin = weeklyMean - se,
ymax = weeklyMean + se),
width = 0.2, color = 'green')
#is there much variability week to week?
df %>% group_by(week) %>%
summarize(weeklyMean = mean(SalesInThousands),
se = sd(SalesInThousands)/sqrt(n())) %>%
ggplot(aes(x = week, y = weeklyMean, group = 1)) +
geom_line(linewidth = 3, color = 'green') +
geom_point(size = 3, color = 'green') +
geom_errorbar(aes(ymin = weeklyMean - se,
ymax = weeklyMean + se),
width = 0.2, color = 'green') +
myTheme
df %>% ggplot(aes(  )) +
geom_line() +
myTheme +
#is there much variability week to week?
df %>% group_by(week) %>%
summarize(weeklyMean = mean(SalesInThousands),
se = sd(SalesInThousands)/sqrt(n())) %>%
ggplot(aes(x = week, y = weeklyMean, group = 1)) +
geom_line(linewidth = 3, color = 'green') +
geom_point(size = 3, color = 'green') +
geom_errorbar(aes(ymin = weeklyMean - se,
ymax = weeklyMean + se),
width = 0.2, color = 'green') +
myTheme
df %>% ggplot(aes(  )) +
geom_line() +
myTheme +
#is there much variability week to week?
df %>% group_by(week) %>%
summarize(weeklyMean = mean(SalesInThousands),
se = sd(SalesInThousands)/sqrt(n())) %>%
ggplot(data = ., aes(x = week, y = weeklyMean, group = 1)) +
geom_line(linewidth = 3, color = 'green') +
geom_point(size = 3, color = 'green') +
geom_errorbar(aes(ymin = weeklyMean - se,
ymax = weeklyMean + se),
width = 0.2, color = 'green') +
myTheme
df %>% group_by(week) %>%
summarize(weeklyMean = mean(SalesInThousands),
se = sd(SalesInThousands)/sqrt(n())) %>%
ggplot(aes(x = week, y = weeklyMean, group = 1)) +
geom_line(linewidth = 3, color = 'green') +
geom_point(size = 3, color = 'green') +
geom_errorbar(aes(ymin = weeklyMean - se,
ymax = weeklyMean + se),
width = 0.2, color = 'green') +
myTheme
names(df)
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath <- file.path(path.expand("~"), "GitHub",
"MasterStatsUsingR")
library(tidyverse) # data manipulation and visualization
source(file.path(gitHubPath, 'courseTheme.R'))
library(BSDA)
library(pracma)
library(kableExtra)
df <- read.csv(file.path(gitHubPath, 'data',
'WA_Marketing-Campaign.csv'))
names(df)
View(df)
df %>% ggplot(aes(y = SalesInThousands,
color = Promotion)) +
geom_boxplot(linewidth = 2)+
myTheme + brightCol + brightFil+
theme(axis.text.x = element_blank())
df$Promotion = as.factor(df$Promotion)
df %>% ggplot(aes(y = SalesInThousands,
color = Promotion)) +
geom_boxplot(linewidth = 2)+
myTheme + brightCol + brightFil+
theme(axis.text.x = element_blank())
alphaAdjusted = .05/3
t.test(df$SalesInThousands[df$Promotion == 1],
df$SalesInThousands[df$Promotion == 2])
out = t.test(df$SalesInThousands[df$Promotion == 1],
df$SalesInThousands[df$Promotion == 2])
out$p.value
results = data.frame('test' = c('0','0','0'),
'pval' = c(0,0,0),
'n1' = c(0,0,0),
'n2' = c(0,0,0),
'mean1' = c(0,0,0),
'mean2' = c(0,0,0),
'sigDif'= c(0,0,0))
results$test[1] = paste0('promotion', 1, '_promotion', 2)
out = t.test(df$SalesInThousands[df$Promotion == 1],
df$SalesInThousands[df$Promotion == 2])
results$pval[1] = out$p.value
results$n1[1] = sum(df$promotion == 1)
results$n2[1] = sum(df$promotion == 2)
results$mean1[1] = mean(df$SalesInThousands[df$Promotion == 1])
results$mean2[1] = mean(df$SalesInThousands[df$Promotion == 2])
results$sigDif[1] = out$p.value < alphaAdjusted
View(results)
View(results)
sum(df$promotion == 1)
results$n1[1] = sum(df$Promotion == 1)
results$n2[1] = sum(df$Promotion == 2)
results$test[2] = paste0('promotion', 1, '_promotion', 3)
out = t.test(df$SalesInThousands[df$Promotion == 1],
df$SalesInThousands[df$Promotion == 3])
results$pval[2] = out$p.value
results$n1[2] = sum(df$Promotion == 1)
results$n2[2] = sum(df$Promotion == 3)
results$mean1[2] = mean(df$SalesInThousands[df$Promotion == 1])
results$mean2[2] = mean(df$SalesInThousands[df$Promotion == 3])
results$sigDif[2] = out$p.value < alphaAdjusted
results$test[3] = paste0('promotion', 2, '_promotion', 3)
out = t.test(df$SalesInThousands[df$Promotion == 2],
df$SalesInThousands[df$Promotion == 3])
results$pval[3] = out$p.value
results$n1[3] = sum(df$Promotion == 2)
results$n2[3] = sum(df$Promotion == 3)
results$mean1[3] = mean(df$SalesInThousands[df$Promotion == 2])
results$mean2[3] = mean(df$SalesInThousands[df$Promotion == 3])
results$sigDif[3] = out$p.value < alphaAdjusted
results %>%
kable() %>%
kable_classic()
results %>%
kable(digits = 4) %>%
kable_classic()
length(unique(df$LocationID))
names(df)
#plot each stores weekly sales:
df %>% ggplot(aes(x = week, y = SalesInThousands,
group = LocationID,
color = LocationID)) +
geom_line() +
myTheme +
#is there much variability week to week?
#average over all stores and plot the week to week variability
df %>% group_by(week) %>%
summarize(weeklyMean =  ,
se =   ) %>%
ggplot(aes(x = week, y = weeklyMean)) +
myTheme
length(unique(df$LocationID))
names(df)
#plot each stores weekly sales:
df %>% ggplot(aes(x = week, y = SalesInThousands,
color = LocationID,
group = LocationID)) +
geom_line() +
myTheme
df %>% group_by(week) %>%
summarize(weeklyMean =  mean(SalesInThousands),
se = sd(SalesInThounds) / sqrt(n())  )
df %>% group_by(week) %>%
summarize(weeklyMean =  mean(SalesInThousands),
se = sd(SalesInThousands) / sqrt(n())  )
df %>% group_by(week) %>%
summarize(weeklyMean =  mean(SalesInThousands),
se = sd(SalesInThousands) / sqrt(n())  ) %>%
ggplot(aes(x = week, y = weeklyMean)) +
myTheme
df %>% group_by(week) %>%
summarize(weeklyMean =  mean(SalesInThousands),
se = sd(SalesInThousands) / sqrt(n())  )
#is there much variability week to week?
#average over all stores and plot the week to week variability
df %>% group_by(week) %>%
summarize(weeklyMean =  mean(SalesInThousands),
se = sd(SalesInThousands) / sqrt(n())  ) %>%
ggplot(aes(x = week, y = weeklyMean)) +
geom_line() +
myTheme
#is there much variability week to week?
#average over all stores and plot the week to week variability
df %>% group_by(week) %>%
summarize(weeklyMean =  mean(SalesInThousands),
se = sd(SalesInThousands) / sqrt(n())  ) %>%
ggplot(aes(x = week, y = weeklyMean)) +
geom_line(color = 'green') +
myTheme
#is there much variability week to week?
#average over all stores and plot the week to week variability
df %>% group_by(week) %>%
summarize(weeklyMean =  mean(SalesInThousands),
se = sd(SalesInThousands) / sqrt(n())  ) %>%
ggplot(aes(x = week, y = weeklyMean)) +
geom_line(color = 'green') +
geom_errorbar(aes(ymin = weeklyMean - se,
ymax = weeklyMean + se),
color = 'green') +
myTheme
#average over weeks within each location
#to get one value per location
df <- df %>%
group_by(LocationID) %>%
summarize(
SalesInThousands = mean(SalesInThousands),
across(-SalesInThousands, ~first(.)))
#After averaging over weeks, variability is lower:
#replot the boxplot
df %>% ggplot(aes(y = SalesInThousands,
color = Promotion)) +
geom_boxplot(linewidth = 2)+
myTheme + brightCol + brightFil+
theme(axis.text.x = element_blank())
alphaAdjusted = .05/3
oldRes = results
results = data.frame('test' = c('0','0','0'),
'pval' = c(0,0,0),
'n1' = c(0,0,0),
'n2' = c(0,0,0),
'mean1' = c(0,0,0),
'mean2' = c(0,0,0),
'sigDif'= c(0,0,0))
results$test[1] = paste0('promotion', 1, '_promotion', 2)
out = t.test(df$SalesInThousands[df$Promotion == 1],
df$SalesInThousands[df$Promotion == 2])
results$pval[1] = out$p.value
results$n1[1] = sum(df$Promotion == 1)
results$n2[1] = sum(df$Promotion == 2)
results$mean1[1] = mean(df$SalesInThousands[df$Promotion == 1])
results$mean2[1] = mean(df$SalesInThousands[df$Promotion == 2])
results$sigDif[1] = out$p.value < alphaAdjusted
results$test[2] = paste0('promotion', 1, '_promotion', 3)
out = t.test(df$SalesInThousands[df$Promotion == 1],
df$SalesInThousands[df$Promotion == 3])
results$pval[2] = out$p.value
results$n1[2] = sum(df$Promotion == 1)
results$n2[2] = sum(df$Promotion == 3)
results$mean1[2] = mean(df$SalesInThousands[df$Promotion == 1])
results$mean2[2] = mean(df$SalesInThousands[df$Promotion == 3])
results$sigDif[2] = out$p.value < alphaAdjusted
results$test[3] = paste0('promotion', 2, '_promotion', 3)
out = t.test(df$SalesInThousands[df$Promotion == 2],
df$SalesInThousands[df$Promotion == 3])
results$pval[3] = out$p.value
results$n1[3] = sum(df$Promotion == 2)
results$n2[3] = sum(df$Promotion == 3)
results$mean1[3] = mean(df$SalesInThousands[df$Promotion == 2])
results$mean2[3] = mean(df$SalesInThousands[df$Promotion == 3])
results$sigDif[3] = out$p.value < alphaAdjusted
results %>%
kable(digits = 4) %>%
kable_classic()
oldRes %>%
kable(digits = 4) %>%
kable_classic()
# Chunk 1
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath <- file.path(path.expand("~"), "GitHub",
"MasterStatsUsingR")
library(tidyverse) # data manipulation and visualization
source(file.path(gitHubPath, 'courseTheme.R'))
library(BSDA)
library(pracma)
library(kableExtra)
df <- read.csv(file.path(gitHubPath, 'data',
'WA_Marketing-Campaign.csv'))
df$Promotion = as.factor(df$Promotion)
df <- df %>%
group_by(LocationID) %>%
summarize(
SalesInThousands = mean(SalesInThousands),
across(-SalesInThousands, ~ first(.))
)
df %>% ggplot(aes(y = SalesInThousands,
color = Promotion)) +
geom_boxplot(linewidth = 2)+
myTheme + brightCol + brightFil+
theme(axis.text.x = element_blank())
pooled_sd <- function(x1, x2) {
n1 <- length(x1)
n2 <- length(x2)
s1 <- sd(x1)
s2 <- sd(x2)
sqrt(((n1 - 1) * s1^2 + (n2 - 1) * s2^2) / (n1 + n2 - 2))
}
alphaAdjusted = .05/3
getSummary <- function(df, idx1, idx2, alphaAdjusted){
results = data.frame(test = 'a')
out = t.test(df$SalesInThousands[df$Promotion == idx1],
df$SalesInThousands[df$Promotion == idx2])
results$test = paste0('promo', idx1, '_v_promo', idx2)
results$pval = out$p.value
results$n1 = sum(df$Promotion == idx1)
results$n2 = sum(df$Promotion == idx2)
results$mean1 = round(out$estimate[1])
results$mean2 = round(out$estimate[2])
results$pooledSD = pooled_sd(
df$SalesInThousands[df$Promotion == idx1],
df$SalesInThousands[df$Promotion == idx2])
results$sigDif = out$p.value < alphaAdjusted
#add on for d
results$meanDif = results$mean1 - results$mean2
results$d = results$meanDif / results$pooledSD
return(results)
}
results = rbind(getSummary(df, 1, 2, alphaAdjusted),
getSummary(df, 1, 3, alphaAdjusted),
getSummary(df, 2, 3, alphaAdjusted))
results %>%
kbl(align = 'c', digits = 4) %>%
kable_classic(full_width = F,
font_size = 20)
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath <- file.path(path.expand("~"), "GitHub",
"MasterStatsUsingR")
library(tidyverse) # data manipulation and visualization
source(file.path(gitHubPath, 'courseTheme.R'))
library(BSDA)
library(pracma)
library(kableExtra)
df <- read.csv(file.path(gitHubPath, 'data',
'WA_Marketing-Campaign.csv'))
df$Promotion = as.factor(df$Promotion)
df <- df %>%
group_by(LocationID) %>%
summarize(
SalesInThousands = mean(SalesInThousands),
across(-SalesInThousands, ~ first(.))
)
df %>% ggplot(aes(y = SalesInThousands,
color = Promotion)) +
geom_boxplot(linewidth = 2)+
myTheme + brightCol + brightFil+
theme(axis.text.x = element_blank())
pooled_sd <- function(x1, x2) {
#pooledSD = sqrt( (SS1 + SS2) / (n1+n2-2))
n1 = length(x1)
n2 = length(x2)
m1 = mean(x1)
m2 = mean(x2)
SS1 = sum((x1 - m1)^2)
SS2 = sum((x2 - m2)^2)
pooledSD = sqrt( (SS1 + SS2) / (n1+n2-2))
return(pooledSD)
}
alphaAdjusted = .05/3
getSummary <- function(df, idx1, idx2){
results = data.frame(test = '1')
out = t.test(df$SalesInThousands[df$Promotion == idx1],
df$SalesInThousands[df$Promotion == idx2])
results$test = paste0('promo', idx1, '_v_promo', idx2)
results$pval = out$p.value
results$n1 = sum(df$Promotion == idx1)
results$n2 = sum(df$Promotion == idx2)
results$mean1 = round(out$estimate[idx1])
results$mean2 = round(out$estimate[idx2])
results$sigDif = out$p.value < alphaAdjusted
return(results)
}
getSummary(df, 1, 2)
getSummary <- function(df, idx1, idx2){
results = data.frame(test = '1')
out = t.test(df$SalesInThousands[df$Promotion == idx1],
df$SalesInThousands[df$Promotion == idx2])
results$test = paste0('promo', idx1, '_v_promo', idx2)
results$pval = out$p.value
results$n1 = sum(df$Promotion == idx1)
results$n2 = sum(df$Promotion == idx2)
results$mean1 = round(out$estimate[idx1])
results$mean2 = round(out$estimate[idx2])
results$sigDif = out$p.value < alphaAdjusted
#cohen's d calculation
# d = (mean1 - mean2) / pooledSD
results$meanDif = results$mean1 - results$mean2
results$pooledSD = pooled_sd(
df$SalesInThousands[df$Promotion == idx1],
df$SalesInThousands[df$Promotion == idx2])
results$d = results$meanDif / results$pooledSD
return(results)
}
getSummary(df, 1, 2)
rbind(getSummary(df, 1, 2),
getSummary(df, 1, 3),
getSummary(df, 2, 3))
idx1 = 1
idx2 = 3
results = data.frame(test = '1')
out = t.test(df$SalesInThousands[df$Promotion == idx1],
df$SalesInThousands[df$Promotion == idx2])
results$test = paste0('promo', idx1, '_v_promo', idx2)
results$pval = out$p.value
results$n1 = sum(df$Promotion == idx1)
results$n2 = sum(df$Promotion == idx2)
results$mean1 = round(out$estimate[idx1])
results$mean2 = round(out$estimate[idx2])
results$sigDif = out$p.value < alphaAdjusted
results
results$mean1 - results$mean2
# Set rendering parameters
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
gitHubPath <- file.path(path.expand("~"), "GitHub",
"MasterStatsUsingR")
library(tidyverse) # data manipulation and visualization
source(file.path(gitHubPath, 'courseTheme.R'))
library(BSDA)
library(pracma)
library(kableExtra)
df <- read.csv(file.path(gitHubPath, 'data',
'WA_Marketing-Campaign.csv'))
df$Promotion = as.factor(df$Promotion)
df <- df %>%
group_by(LocationID) %>%
summarize(
SalesInThousands = mean(SalesInThousands),
across(-SalesInThousands, ~ first(.))
)
df %>% ggplot(aes(y = SalesInThousands,
color = Promotion)) +
geom_boxplot(linewidth = 2)+
myTheme + brightCol + brightFil+
theme(axis.text.x = element_blank())
pooled_sd <- function(x1, x2) {
#pooledSD = sqrt((SS1 + SS2) / (n1 + n2 - 2))
n1 = length(x1)
n2 = length(x2)
m1 = mean(x1)
m2 = mean(x2)
SS1 = sum((x1 - m1)^2)
SS2 = sum((x2 - m2)^2)
pooledSD = sqrt((SS1 + SS2) / (n1 + n2 - 2))
return(pooledSD)
}
alphaAdjusted = .05/3
getSummary <- function(df, idx1, idx2){
results = data.frame(test = '1')
out = t.test(df$SalesInThousands[df$Promotion == idx1],
df$SalesInThousands[df$Promotion == idx2])
results$test = paste0('promo', idx1, '_v_promo', idx2)
results$pval = out$p.value
results$n1 = sum(df$Promotion == idx1)
results$n2 = sum(df$Promotion == idx2)
results$mean1 = mean(
df$SalesInThousands[df$Promotion == 1])
results$mean2 = mean(
df$SalesInThousands[df$Promotion == 2])
results$sigDif = out$p.value < alphaAdjusted
return(results)
}
getSummary(df, 1, 2)
getSummary <- function(df, idx1, idx2){
results = data.frame(test = '1')
out = t.test(df$SalesInThousands[df$Promotion == idx1],
df$SalesInThousands[df$Promotion == idx2])
results$test = paste0('promo', idx1, '_v_promo', idx2)
results$pval = out$p.value
results$n1 = sum(df$Promotion == idx1)
results$n2 = sum(df$Promotion == idx2)
results$mean1 = mean(
df$SalesInThousands[df$Promotion == 1])
results$mean2 = mean(
df$SalesInThousands[df$Promotion == 2])
results$sigDif = out$p.value < alphaAdjusted
#calculate cohen's D
# d = (mean1 - mean2) / pooledSD
results$meanDif = results$mean1 - results$mean2
results$pooledSD = pooled_sd(
df$SalesInThousands[df$Promotion == idx1],
df$SalesInThousands[df$Promotion == idx2])
results$d = results$meanDif / results$pooledSD
return(results)
}
getSummary(df, 1, 2)
rbind(getSummary(df, 1, 2),
getSummary(df, 1, 3),
getSummary(df, 2, 3))
results = rbind(getSummary(df, 1, 2),
getSummary(df, 1, 3),
getSummary(df, 2, 3))
results %>%
kbl(align = 'c', digits = 4) %>%
kable_classic(full_width = F,
font_size = 20)
getSummary <- function(df, idx1, idx2){
results = data.frame(test = '1')
out = t.test(df$SalesInThousands[df$Promotion == idx1],
df$SalesInThousands[df$Promotion == idx2])
results$test = paste0('promo', idx1, '_v_promo', idx2)
results$pval = out$p.value
results$n1 = sum(df$Promotion == idx1)
results$n2 = sum(df$Promotion == idx2)
results$mean1 = mean(
df$SalesInThousands[df$Promotion == idx1])
results$mean2 = mean(
df$SalesInThousands[df$Promotion == idx2])
results$sigDif = out$p.value < alphaAdjusted
#calculate cohen's D
# d = (mean1 - mean2) / pooledSD
results$meanDif = results$mean1 - results$mean2
results$pooledSD = pooled_sd(
df$SalesInThousands[df$Promotion == idx1],
df$SalesInThousands[df$Promotion == idx2])
results$d = results$meanDif / results$pooledSD
return(results)
}
results = rbind(getSummary(df, 1, 2),
getSummary(df, 1, 3),
getSummary(df, 2, 3))
results %>%
kbl(align = 'c', digits = 4) %>%
kable_classic(full_width = F,
font_size = 20)
